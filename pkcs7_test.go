package pkcs7

import (
	"bytes"
	"crypto"
	"crypto/rand"
	"crypto/rsa"
	"crypto/tls"
	"crypto/x509"
	"crypto/x509/pkix"
	"encoding/asn1"
	"fmt"
	"io/ioutil"
	"math/big"
	"os"
	"testing"
	"time"
)

func TestParse(t *testing.T) {
	Example1, _ := ioutil.ReadFile("test_example.p7")
	//fmt.Printf("===\n%x\n===\n", Example3)
	p7, err := Parse(Example1)
	if err != nil {
		t.Fatalf("Parse encountered unexpected error: %v", err)
	}
	fmt.Printf("p7 Content: %q\n", p7.Content)
	fmt.Printf("p7 Certificates:\n")
	for idx, cert := range p7.Certificates {
		fmt.Printf("   [%d] %s\n", idx, cert.Subject.CommonName)
		//fmt.Printf("        %#v\n", cert.PublicKey)
	}
	fmt.Printf("p7 CRLs:\n")
	for idx, crl := range p7.CRLs {
		fmt.Printf("   [%d] %+v\n", idx, crl)
	}
	fmt.Printf("p7 Signers:\n")
	for idx, signer := range p7.Signers {
		name := new(pkix.Name)
		name.FillFromRDNSequence(&signer.IssuerAndSerialNumber.IssuerName)
		fmt.Printf("   [%d] %s (Serial# %s)\n", idx, name.CommonName, signer.IssuerAndSerialNumber.SerialNumber)
		fmt.Printf("        Digest Algorithm: %s\n", signer.DigestAlgorithm.Algorithm)
		fmt.Printf("        Encryption Algorithm: %s\n", signer.DigestEncryptionAlgorithm.Algorithm)
		fmt.Printf("        Digest: %X\n", signer.EncryptedDigest)
	}
	//fmt.Printf("p7 Raw: %+v", p7.raw)
}

func TestVerify(t *testing.T) {
	example1, _ := ioutil.ReadFile("test_example.p7")
	fmt.Printf("===\n% X\n===\n", example1)
	p7, err := Parse(example1)
	if err != nil {
		t.Errorf("Parse encountered unexpected error: %v", err)
	}

	if err := p7.Verify(); err != nil {
		t.Errorf("Verify failed with error: %v", err)
	}
}

func TestBer2Der(t *testing.T) {
	//Example1, _ := ioutil.ReadFile("test_example.p7")
	fmt.Printf("===\n% X\n===\n", Example3)
	der, err := ber2der(Example3)
	if err != nil {
		t.Fatalf("ber2der failed with error: %v", err)
	}
	fmt.Printf("=== DER result ===\n% X\n===\n", der)

	if der2, err := ber2der(der); err != nil {
		t.Errorf("ber2der on DER bytes failed with error: %v", err)
	} else {
		if !bytes.Equal(der, der2) {
			fmt.Printf("=== DER squared result ===\n% X\n===\n", der2)
			t.Error("ber2der is not idempotent")
		}
	}

	p7, err := Parse(der)
	if err != nil {
		t.Errorf("Could not parse resulting DER with error: %v", err)
	}
	if err = p7.Verify(); err != nil {
		t.Skipf("Could not verify resulting DER with error: %v", err)
	}
}

func TestDecrypt(t *testing.T) {
	p7wrapper, err := Parse(Example2)
	if err != nil {
		t.Fatal(err)
	}
	if der, err := ber2der(p7wrapper.Content); err == nil {
		fmt.Printf("===Encrypted after ber2der===\n% X\n===\n", der)
	}
	p7, err := Parse(p7wrapper.Content)
	fmt.Printf("p7: %#v\n", p7)
	if err != nil {
		t.Fatal(err)
	}
	certPath := os.ExpandEnv("$HOME/pki/CA/intermediate/certs/intermediate.cert.pem")
	keyPath := os.ExpandEnv("$HOME/pki/CA/intermediate/private/intermediate.key")
	pair, err := tls.LoadX509KeyPair(certPath, keyPath)
	if err != nil {
		t.Fatal(err)
	}
	cert, err := x509.ParseCertificate(pair.Certificate[0])
	if err != nil {
		t.Fatal(err)
	}
	content, err := p7.Decrypt(cert, pair.PrivateKey)
	if err != nil {
		t.Errorf("Cannot Decrypt with error: %v", err)
	}
	fmt.Printf("Content: \n% X\n", content)
	// do checks on content
}

func TestDegenerateCertificate(t *testing.T) {
	cert, err := createTestCertificate()
	if err != nil {
		t.Fatal(err)
	}
	deg, err := DegenerateCertificate(cert.Certificate[0])
	if err != nil {
		t.Fatal(err)
	}
	fmt.Printf("=== BEGIN DEGENERATE CERT ===\n% X\n=== END DEGENERATE CERT ===\n", deg)
}

func TestSign(t *testing.T) {
	cert, err := createTestCertificate()
	if err != nil {
		t.Fatal(err)
	}
	content := []byte("Hello World")
	toBeSigned, err := NewSignedData(content)
	if err != nil {
		t.Fatalf("Cannot initialize signed data: %s", err)
	}
	if err := toBeSigned.AddSigner(cert.Leaf, cert.PrivateKey, SignerInfoConfig{}); err != nil {
		t.Fatalf("Cannot add signer: %s", err)
	}
	signed, err := toBeSigned.Finish()
	if err != nil {
		t.Fatalf("Cannot finish signing data: %s", err)
	}
	fmt.Printf("=== BEGIN SIGNED RESULT ===\n% X\n=== END SIGNED RESULT ===\n", signed)

	p7, err := Parse(signed)
	if err != nil {
		t.Fatalf("Cannot parse our signed data: %s", err)
	}
	if bytes.Compare(content, p7.Content) != 0 {
		t.Errorf("Our content was not in the parsed data:\n\tExpected: %s\n\tActual: %s", content, p7.Content)
	}
	if err := p7.Verify(); err != nil {
		t.Errorf("Cannot verify our signed data: %s", err)
	}
}

func TestEncrypt(t *testing.T) {
	plaintext := []byte("Hello Secret World!")
	cert, err := createTestCertificate()
	if err != nil {
		t.Fatal(err)
	}
	encrypted, err := Encrypt(plaintext, []*x509.Certificate{cert.Leaf})
	if err != nil {
		t.Fatal(err)
	}
	p7, err := Parse(encrypted)
	if err != nil {
		t.Fatalf("cannot Parse encrypted result: %s", err)
	}
	result, err := p7.Decrypt(cert.Leaf, cert.PrivateKey)
	if err != nil {
		t.Fatalf("cannot Decrypt encrypted result: %s", err)
	}
	if bytes.Compare(plaintext, result) != 0 {
		t.Errorf("encrypted data does not match plaintext:\n\tExpected: %s\n\tActual: %s", plaintext, result)
	}
}

func TestUnmarshalSignedAttribute(t *testing.T) {
	cert, err := createTestCertificate()
	if err != nil {
		t.Fatal(err)
	}
	content := []byte("Hello World")
	toBeSigned, err := NewSignedData(content)
	if err != nil {
		t.Fatalf("Cannot initialize signed data: %s", err)
	}
	oidTest := asn1.ObjectIdentifier{2, 3, 4, 5, 6, 7}
	testValue := "TestValue"
	if err := toBeSigned.AddSigner(cert.Leaf, cert.PrivateKey, SignerInfoConfig{
		ExtraSignedAttributes: []Attribute{Attribute{Type: oidTest, Value: testValue}},
	}); err != nil {
		t.Fatalf("Cannot add signer: %s", err)
	}
	signed, err := toBeSigned.Finish()
	if err != nil {
		t.Fatalf("Cannot finish signing data: %s", err)
	}
	p7, err := Parse(signed)
	var actual string
	err = p7.UnmarshalSignedAttribute(oidTest, &actual)
	if err != nil {
		t.Fatalf("Cannot unmarshal test value: %s", err)
	}
	if testValue != actual {
		t.Errorf("Attribute does not match test value\n\tExpected: %s\n\tActual: %s", testValue, actual)
	}
}

func createTestCertificate() (tls.Certificate, error) {
	signer, err := createTestCertificateByIssuer("Eddard Stark", nil)
	if err != nil {
		return tls.Certificate{}, err
	}
	return createTestCertificateByIssuer("Jon Snow", &signer)
}

func createTestCertificateByIssuer(name string, issuer *tls.Certificate) (tls.Certificate, error) {

	priv, err := rsa.GenerateKey(rand.Reader, 1024)
	if err != nil {
		return tls.Certificate{}, err
	}
	serialNumberLimit := new(big.Int).Lsh(big.NewInt(1), 32)
	serialNumber, err := rand.Int(rand.Reader, serialNumberLimit)
	if err != nil {
		return tls.Certificate{}, err
	}

	template := x509.Certificate{
		SerialNumber:       serialNumber,
		SignatureAlgorithm: x509.SHA256WithRSA,
		Subject: pkix.Name{
			CommonName:   name,
			Organization: []string{"Acme Co"},
		},
		NotBefore: time.Now(),
		NotAfter:  time.Now().AddDate(1, 0, 0),
		KeyUsage:  x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,
	}
	var issuerCert *x509.Certificate
	var issuerKey crypto.PrivateKey
	if issuer != nil {
		issuerCert = issuer.Leaf
		issuerKey = issuer.PrivateKey
	} else {
		issuerCert = &template
		issuerKey = priv
	}
	cert, err := x509.CreateCertificate(rand.Reader, &template, issuerCert, priv.Public(), issuerKey)
	if err != nil {
		return tls.Certificate{}, err
	}
	leaf, err := x509.ParseCertificate(cert)
	if err != nil {
		return tls.Certificate{}, err
	}
	return tls.Certificate{
		Certificate: [][]byte{cert},
		Leaf:        leaf,
		PrivateKey:  priv,
	}, nil
}

var Example2 = []byte{0x30, 0x80, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x7, 0x2, 0xa0, 0x80, 0x30, 0x80, 0x2, 0x1, 0x1, 0x31, 0xb, 0x30, 0x9, 0x6, 0x5, 0x2b, 0xe, 0x3, 0x2, 0x1a, 0x5, 0x0, 0x30, 0x80, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x7, 0x1, 0xa0, 0x80, 0x24, 0x80, 0x4, 0x82, 0x4, 0xbc, 0x30, 0x80, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x7, 0x3, 0xa0, 0x80, 0x30, 0x80, 0x2, 0x1, 0x0, 0x31, 0x82, 0x2, 0xd2, 0x30, 0x82, 0x2, 0xce, 0x2, 0x1, 0x0, 0x30, 0x81, 0xb5, 0x30, 0x81, 0xae, 0x31, 0x20, 0x30, 0x1e, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2c, 0x20, 0x49, 0x6e, 0x63, 0x31, 0x1e, 0x30, 0x1c, 0x6, 0x3, 0x55, 0x4, 0xb, 0x13, 0x15, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x31, 0x23, 0x30, 0x21, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x9, 0x1, 0x16, 0x14, 0x64, 0x65, 0x76, 0x40, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x79, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x31, 0x10, 0x30, 0xe, 0x6, 0x3, 0x55, 0x4, 0x7, 0x13, 0x7, 0x4f, 0x72, 0x6c, 0x61, 0x6e, 0x64, 0x6f, 0x31, 0x10, 0x30, 0xe, 0x6, 0x3, 0x55, 0x4, 0x8, 0x13, 0x7, 0x46, 0x6c, 0x6f, 0x72, 0x69, 0x64, 0x61, 0x31, 0xb, 0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2, 0x55, 0x53, 0x31, 0x14, 0x30, 0x12, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0xb, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x43, 0x41, 0x2, 0x2, 0x10, 0x0, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x4, 0x82, 0x2, 0x0, 0x6f, 0x22, 0x61, 0x77, 0x20, 0x8c, 0xf0, 0x87, 0xa8, 0x60, 0x41, 0xa9, 0x59, 0x82, 0x18, 0x17, 0x3d, 0x97, 0x35, 0xcb, 0xa3, 0x1e, 0xe8, 0x76, 0xf2, 0x24, 0x46, 0xa2, 0x21, 0xf9, 0x72, 0x6a, 0x6a, 0x6b, 0x8, 0x66, 0xee, 0xd6, 0xa5, 0x2b, 0x68, 0x9, 0x78, 0x7, 0xbe, 0x31, 0x5f, 0x1d, 0xe2, 0x6c, 0xa6, 0x63, 0x53, 0x2e, 0xfd, 0x9, 0xa4, 0xd6, 0xb7, 0xcb, 0xb3, 0x29, 0x8e, 0x11, 0xeb, 0xf6, 0x17, 0x50, 0x66, 0xab, 0xb6, 0x62, 0x4d, 0x1f, 0x8e, 0x39, 0x2a, 0x6b, 0x4e, 0x1d, 0xc8, 0x80, 0x77, 0x67, 0x15, 0xf4, 0x4f, 0x1d, 0x7, 0xbe, 0xc8, 0x32, 0x4a, 0x8a, 0xd9, 0xc5, 0x3d, 0x35, 0x9a, 0x93, 0x39, 0x16, 0x30, 0xae, 0x8e, 0xfc, 0x31, 0x56, 0x75, 0x61, 0xe1, 0x3f, 0x3e, 0xdb, 0x57, 0x37, 0xaa, 0x2e, 0x2a, 0xb0, 0xfe, 0xef, 0xb4, 0x6d, 0xd1, 0xb9, 0xed, 0xe3, 0xfe, 0x21, 0xad, 0xa6, 0x82, 0x4e, 0xcb, 0x7, 0xa, 0x6f, 0x87, 0x7b, 0x51, 0xaa, 0x58, 0x9e, 0x9a, 0x20, 0xd6, 0x61, 0xd, 0x4a, 0x0, 0x66, 0x36, 0x75, 0xad, 0xdc, 0x8d, 0x2e, 0xc4, 0x2e, 0x8b, 0x8a, 0x4, 0x39, 0x4b, 0x1d, 0xcb, 0x87, 0x2f, 0xa6, 0x2f, 0xfa, 0xcb, 0xfd, 0x37, 0x97, 0xfd, 0x6d, 0x59, 0x9c, 0x60, 0x4c, 0x60, 0xe8, 0x5d, 0xff, 0xff, 0xc7, 0xa, 0x32, 0x8e, 0x61, 0x0, 0xfd, 0x59, 0xd5, 0x4c, 0x46, 0xbd, 0xa6, 0x56, 0xcc, 0xe4, 0x49, 0x3f, 0xc1, 0xe7, 0x6a, 0xde, 0x50, 0x69, 0xab, 0xe0, 0x5c, 0xb4, 0x9e, 0xc4, 0x5c, 0xed, 0x4e, 0x1b, 0x36, 0x1, 0xa3, 0x58, 0x4a, 0x17, 0xbc, 0x50, 0x8, 0x24, 0xa3, 0xa2, 0x2f, 0xa9, 0x48, 0xee, 0x4e, 0x5e, 0x9, 0x7b, 0x6a, 0x2d, 0xf9, 0x71, 0xbb, 0x3a, 0xab, 0x69, 0xe2, 0xab, 0xac, 0x5a, 0x45, 0xd4, 0x51, 0x40, 0x1c, 0x7b, 0xca, 0xc3, 0x91, 0xbd, 0xc8, 0x80, 0xff, 0x66, 0x32, 0xad, 0xd2, 0xcd, 0x31, 0xb6, 0xe3, 0x74, 0x87, 0x48, 0x70, 0x18, 0x66, 0x64, 0xab, 0x6e, 0x98, 0x2d, 0xad, 0x29, 0xc3, 0xac, 0xaf, 0xe, 0x1a, 0x6e, 0x5, 0x98, 0x54, 0x8, 0x29, 0x93, 0xe7, 0xfc, 0xe7, 0xd1, 0x80, 0xbb, 0x29, 0x99, 0xcb, 0x90, 0x89, 0xcb, 0x96, 0xa6, 0xd8, 0x46, 0xea, 0x56, 0x5d, 0x2e, 0x80, 0x25, 0x64, 0x4c, 0xea, 0xa9, 0x2f, 0x9c, 0x99, 0x47, 0xd0, 0x3c, 0xac, 0x8c, 0x38, 0xac, 0x69, 0xbc, 0xa1, 0x1b, 0x9, 0x89, 0x8c, 0x2c, 0xcf, 0xa1, 0x0, 0x82, 0x1, 0x69, 0xc3, 0x35, 0x3e, 0x7b, 0xcc, 0x41, 0xe3, 0x88, 0x7, 0x7f, 0x37, 0xc0, 0x47, 0xb9, 0xdd, 0x96, 0x10, 0x8c, 0x13, 0xab, 0xd8, 0x4d, 0x53, 0x6e, 0x35, 0xc7, 0xb, 0xf, 0x46, 0x90, 0x40, 0x6b, 0x40, 0x20, 0x33, 0x7d, 0xd5, 0x7, 0xa1, 0x33, 0xfd, 0xde, 0x9, 0x31, 0x5d, 0x6e, 0x5c, 0xb8, 0xe9, 0x1d, 0x20, 0x86, 0xc4, 0x2, 0x19, 0x3c, 0xfb, 0x67, 0x67, 0x89, 0x36, 0x80, 0xed, 0x9d, 0x86, 0x5a, 0x4c, 0x5a, 0x5a, 0xa5, 0x4b, 0xa7, 0x2, 0xff, 0xba, 0x45, 0x29, 0xff, 0xea, 0x88, 0xce, 0x4f, 0x19, 0x2f, 0x93, 0x8f, 0x83, 0x46, 0xc2, 0xc9, 0xd3, 0xda, 0xd9, 0xa7, 0x90, 0x70, 0x4b, 0x61, 0x80, 0x59, 0x6b, 0x8d, 0xb0, 0x9b, 0xc1, 0x4d, 0x1a, 0x22, 0x9e, 0x45, 0xb2, 0xd6, 0x6e, 0x14, 0xf8, 0x40, 0x30, 0x6e, 0x9e, 0xb9, 0x85, 0xdf, 0x21, 0x81, 0x23, 0x3c, 0xae, 0xc1, 0xc0, 0x9, 0x89, 0x33, 0xa0, 0xf5, 0x20, 0xc7, 0x8a, 0xb1, 0x43, 0xae, 0x60, 0x5d, 0xb1, 0x68, 0x28, 0xe3, 0x29, 0xaf, 0x8e, 0x32, 0x1c, 0xb, 0x99, 0xaf, 0xa5, 0x3b, 0x94, 0xba, 0xc5, 0xfe, 0x4b, 0x4f, 0x17, 0x30, 0x80, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x7, 0x1, 0x30, 0x11, 0x6, 0x5, 0x2b, 0xe, 0x3, 0x2, 0x7, 0x4, 0x8, 0x13, 0xac, 0x87, 0xf5, 0xa1, 0x54, 0x59, 0x23, 0xa0, 0x80, 0x4, 0x82, 0x1, 0x98, 0xbb, 0xc, 0x27, 0x3c, 0xd8, 0x79, 0xa6, 0x4d, 0xbc, 0xd6, 0x24, 0xb, 0x60, 0x8a, 0x84, 0xae, 0x31, 0x70, 0x50, 0xc8, 0x99, 0x34, 0x28, 0x9a, 0x53, 0x3f, 0xb0, 0x7e, 0xba, 0xe5, 0xca, 0x69, 0x48, 0xe2, 0x53, 0xde, 0xc0, 0xa5, 0xf3, 0x68, 0xc3, 0xf2, 0x37, 0x68, 0x75, 0x61, 0x6b, 0x9f, 0x9b, 0x74, 0x9c, 0xa1, 0x52, 0x2f, 0xb8, 0x1e, 0xf8, 0x40, 0x30, 0xd, 0x87, 0x9a, 0x79, 0xc1, 0xdb, 0xae, 0x85, 0x88, 0x46, 0x28, 0x9a, 0xcc, 0xdd, 0x16, 0x71, 0xc2, 0xb6, 0xcb, 0x7e, 0xdb, 0x13, 0x49, 0x94, 0x19, 0x1c, 0x31, 0xaa, 0xa4, 0x1f, 0x51, 0x83, 0xaa, 0xb3, 0xf, 0xd2, 0x1e, 0x2f, 0xed, 0x96, 0x6b, 0xf9, 0x8b, 0x5e, 0x17, 0xf7, 0xa, 0x86, 0xc0, 0xd3, 0xa4, 0x7b, 0x31, 0xf2, 0x6, 0xca, 0x7, 0x19, 0xb2, 0xe7, 0xbc, 0xa7, 0xba, 0x1d, 0x69, 0xac, 0x49, 0x80, 0xa6, 0x32, 0x14, 0x1d, 0xaf, 0x8, 0xb6, 0x36, 0xd7, 0x8e, 0x79, 0x95, 0x7c, 0xa2, 0x92, 0x7c, 0x67, 0xa2, 0x14, 0x5b, 0x88, 0x24, 0x24, 0xd0, 0x6c, 0x51, 0x30, 0x89, 0xb6, 0x78, 0xa4, 0x25, 0x6b, 0x8, 0x90, 0x3, 0x8d, 0x84, 0xc3, 0xf, 0x61, 0x67, 0x33, 0x3, 0xe, 0x98, 0xe, 0xfd, 0x8c, 0xaa, 0x8e, 0x30, 0x9f, 0x81, 0x21, 0x20, 0xf7, 0x50, 0x33, 0xb7, 0xb8, 0xef, 0x2e, 0xed, 0x87, 0xb, 0x7a, 0xd4, 0xfa, 0xca, 0x78, 0x2, 0x9f, 0x96, 0x34, 0xb9, 0xeb, 0xf1, 0x37, 0xac, 0x5, 0x48, 0xed, 0xa7, 0x23, 0x82, 0x87, 0xe5, 0xdb, 0x94, 0x71, 0xcb, 0xc9, 0xeb, 0xdb, 0x87, 0x8f, 0x81, 0x60, 0xbf, 0x30, 0x3d, 0xcc, 0x1c, 0x7c, 0x73, 0xe6, 0x7, 0x93, 0x93, 0xaa, 0xd6, 0xb2, 0xf2, 0xbb, 0x41, 0x76, 0xfd, 0x65, 0x82, 0x46, 0xa2, 0x86, 0x5e, 0xc6, 0x16, 0xe, 0xb9, 0x36, 0x64, 0xce, 0x35, 0x49, 0x18, 0x99, 0x9b, 0x1d, 0x26, 0x23, 0xbc, 0xe8, 0xfa, 0xe, 0xcc, 0x2e, 0x8, 0xbc, 0x96, 0x9e, 0x65, 0x8e, 0x87, 0x57, 0x6c, 0x22, 0x0, 0x56, 0xe7, 0x80, 0x3e, 0xc4, 0x23, 0xbc, 0x60, 0x65, 0x8, 0xc0, 0x21, 0x34, 0x47, 0xc7, 0xbe, 0xa1, 0x52, 0xde, 0x71, 0xc, 0x18, 0x36, 0xd1, 0x9f, 0xd8, 0x10, 0x6b, 0xc6, 0xc7, 0x24, 0x47, 0xb8, 0xac, 0xbc, 0xb2, 0x4, 0x1, 0x0, 0x58, 0xce, 0xe6, 0xa1, 0xf8, 0xee, 0xb5, 0xeb, 0x4d, 0xc0, 0x72, 0xcd, 0x69, 0x8c, 0xc6, 0x6e, 0x43, 0x3f, 0x72, 0x6c, 0x53, 0x42, 0x1e, 0xee, 0x6f, 0x7d, 0xe8, 0x33, 0x92, 0xdc, 0x28, 0xfa, 0xb6, 0xcc, 0xd6, 0xdd, 0xe, 0x9c, 0x61, 0xdf, 0x54, 0x9, 0x7c, 0xb5, 0x3f, 0xf1, 0x87, 0x33, 0x6d, 0xd1, 0x34, 0x84, 0x7f, 0x2d, 0x2d, 0xc4, 0x80, 0xc2, 0x64, 0xae, 0x80, 0xaf, 0x64, 0xfd, 0x74, 0xb5, 0x8, 0xd0, 0x1e, 0x72, 0x84, 0x2f, 0x9a, 0xbe, 0x14, 0x2d, 0xe0, 0x6a, 0xab, 0x62, 0xc1, 0x36, 0xec, 0x4e, 0x54, 0xed, 0x4, 0x8, 0x29, 0x3b, 0xdd, 0x33, 0x5c, 0xcd, 0xe9, 0x67, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x82, 0x1, 0xea, 0x30, 0x82, 0x1, 0xe6, 0x30, 0x82, 0x1, 0x4f, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x5, 0x5, 0x0, 0x30, 0x2f, 0x31, 0x2d, 0x30, 0x2b, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0x24, 0x31, 0x39, 0x35, 0x39, 0x41, 0x38, 0x33, 0x43, 0x2d, 0x32, 0x44, 0x37, 0x35, 0x2d, 0x34, 0x43, 0x44, 0x35, 0x2d, 0x42, 0x34, 0x43, 0x34, 0x2d, 0x37, 0x33, 0x45, 0x32, 0x37, 0x42, 0x36, 0x46, 0x42, 0x31, 0x36, 0x43, 0x30, 0x1e, 0x17, 0xd, 0x31, 0x35, 0x30, 0x34, 0x31, 0x35, 0x32, 0x30, 0x34, 0x30, 0x35, 0x30, 0x5a, 0x17, 0xd, 0x31, 0x36, 0x30, 0x34, 0x31, 0x34, 0x32, 0x30, 0x34, 0x30, 0x35, 0x30, 0x5a, 0x30, 0x2f, 0x31, 0x2d, 0x30, 0x2b, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0x24, 0x31, 0x39, 0x35, 0x39, 0x41, 0x38, 0x33, 0x43, 0x2d, 0x32, 0x44, 0x37, 0x35, 0x2d, 0x34, 0x43, 0x44, 0x35, 0x2d, 0x42, 0x34, 0x43, 0x34, 0x2d, 0x37, 0x33, 0x45, 0x32, 0x37, 0x42, 0x36, 0x46, 0x42, 0x31, 0x36, 0x43, 0x30, 0x81, 0x9f, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x81, 0x8d, 0x0, 0x30, 0x81, 0x89, 0x2, 0x81, 0x81, 0x0, 0xe2, 0xd7, 0x79, 0x17, 0x7, 0xc6, 0x0, 0x46, 0x1c, 0x2e, 0xc5, 0xa7, 0xb1, 0xec, 0x84, 0x82, 0x5b, 0x9f, 0x5a, 0xe9, 0xe8, 0x34, 0xe8, 0x37, 0x15, 0xc6, 0x10, 0xc1, 0x83, 0xe8, 0xb2, 0x37, 0xba, 0xce, 0x67, 0x80, 0xf7, 0xa9, 0xb7, 0x29, 0xee, 0xee, 0x37, 0x35, 0xc3, 0x4e, 0xcf, 0xf3, 0x47, 0xa8, 0x43, 0x3b, 0xed, 0xa6, 0x3d, 0x1c, 0xd9, 0xed, 0x25, 0x71, 0xba, 0xf5, 0xf9, 0x5b, 0xa5, 0x19, 0x25, 0x52, 0x81, 0x5c, 0x41, 0x8e, 0x4f, 0x6f, 0xcc, 0xbd, 0xe5, 0x50, 0xeb, 0x16, 0xea, 0x21, 0x6, 0xc0, 0x7c, 0x5d, 0xb2, 0x45, 0x60, 0xc6, 0x46, 0x99, 0xf, 0x1e, 0xe1, 0xdb, 0x9d, 0xfb, 0xbb, 0x80, 0x15, 0x8f, 0x64, 0xc1, 0xa, 0x89, 0x79, 0x64, 0xf8, 0x8e, 0x12, 0xd7, 0xd6, 0x86, 0xcf, 0xda, 0x85, 0x87, 0xd2, 0x68, 0x7c, 0x5d, 0x32, 0xe9, 0xe, 0x31, 0x99, 0x41, 0x2, 0x3, 0x1, 0x0, 0x1, 0xa3, 0x12, 0x30, 0x10, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x5, 0xa0, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x5, 0x5, 0x0, 0x3, 0x81, 0x81, 0x0, 0xc4, 0x18, 0x3b, 0xd5, 0x78, 0x1, 0xa5, 0xec, 0xcb, 0xf0, 0xe4, 0x12, 0xce, 0xc2, 0x33, 0x39, 0x9a, 0x4, 0xc6, 0xab, 0xc8, 0x87, 0x82, 0x7b, 0xbe, 0x0, 0x84, 0xec, 0x74, 0x3f, 0xf6, 0x5a, 0xde, 0xc5, 0xce, 0x85, 0xb0, 0x89, 0xcf, 0x68, 0x3a, 0xcb, 0x9, 0xc1, 0x95, 0xaf, 0x73, 0xf, 0xa6, 0x90, 0xa1, 0x4d, 0x92, 0xa3, 0x6f, 0xd8, 0x90, 0x39, 0xaf, 0xc, 0xd2, 0xa4, 0xf7, 0xed, 0x8b, 0x31, 0xad, 0xc5, 0xa3, 0xec, 0xb2, 0x7e, 0xbe, 0x7b, 0x18, 0xf1, 0x9c, 0x81, 0xec, 0x47, 0x72, 0x26, 0x42, 0x54, 0xa9, 0x2c, 0x50, 0x1, 0x19, 0xe8, 0x6b, 0x8c, 0xad, 0x25, 0xbf, 0xb6, 0xba, 0x7c, 0xc7, 0x14, 0x6a, 0xdb, 0xc5, 0xfa, 0xfb, 0x21, 0xba, 0x20, 0xa, 0xf1, 0x2b, 0x7a, 0x4f, 0x82, 0xc2, 0x31, 0x38, 0x99, 0xf, 0x35, 0x8, 0x34, 0x1e, 0x2c, 0xa0, 0x53, 0xf6, 0xc3, 0x31, 0x82, 0x1, 0xaa, 0x30, 0x82, 0x1, 0xa6, 0x2, 0x1, 0x1, 0x30, 0x34, 0x30, 0x2f, 0x31, 0x2d, 0x30, 0x2b, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0x24, 0x31, 0x39, 0x35, 0x39, 0x41, 0x38, 0x33, 0x43, 0x2d, 0x32, 0x44, 0x37, 0x35, 0x2d, 0x34, 0x43, 0x44, 0x35, 0x2d, 0x42, 0x34, 0x43, 0x34, 0x2d, 0x37, 0x33, 0x45, 0x32, 0x37, 0x42, 0x36, 0x46, 0x42, 0x31, 0x36, 0x43, 0x2, 0x1, 0x1, 0x30, 0x9, 0x6, 0x5, 0x2b, 0xe, 0x3, 0x2, 0x1a, 0x5, 0x0, 0xa0, 0x81, 0xcd, 0x30, 0x12, 0x6, 0xa, 0x60, 0x86, 0x48, 0x1, 0x86, 0xf8, 0x45, 0x1, 0x9, 0x2, 0x31, 0x4, 0x13, 0x2, 0x31, 0x39, 0x30, 0x18, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x9, 0x3, 0x31, 0xb, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x7, 0x1, 0x30, 0x1c, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x9, 0x5, 0x31, 0xf, 0x17, 0xd, 0x31, 0x35, 0x30, 0x34, 0x31, 0x35, 0x32, 0x30, 0x34, 0x30, 0x35, 0x30, 0x5a, 0x30, 0x20, 0x6, 0xa, 0x60, 0x86, 0x48, 0x1, 0x86, 0xf8, 0x45, 0x1, 0x9, 0x5, 0x31, 0x12, 0x4, 0x10, 0x2d, 0x5b, 0xbe, 0xe4, 0x80, 0x77, 0x4d, 0x13, 0x63, 0xb0, 0x2e, 0xde, 0x51, 0xe1, 0x58, 0xfd, 0x30, 0x23, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x9, 0x4, 0x31, 0x16, 0x4, 0x14, 0x2b, 0x11, 0x53, 0x8b, 0x59, 0x52, 0x6c, 0x2, 0x71, 0x84, 0x5e, 0x89, 0xc4, 0x32, 0x99, 0xd5, 0x4a, 0x2, 0x5e, 0xaa, 0x30, 0x38, 0x6, 0xa, 0x60, 0x86, 0x48, 0x1, 0x86, 0xf8, 0x45, 0x1, 0x9, 0x7, 0x31, 0x2a, 0x13, 0x28, 0x45, 0x35, 0x44, 0x43, 0x45, 0x30, 0x46, 0x41, 0x44, 0x32, 0x36, 0x33, 0x30, 0x30, 0x38, 0x36, 0x38, 0x43, 0x31, 0x34, 0x44, 0x44, 0x41, 0x41, 0x35, 0x42, 0x44, 0x46, 0x38, 0x41, 0x33, 0x42, 0x37, 0x36, 0x38, 0x45, 0x44, 0x32, 0x30, 0x34, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x4, 0x81, 0x80, 0xbd, 0xbe, 0xf6, 0x54, 0x5f, 0xe1, 0xf4, 0xe2, 0x4a, 0x5, 0x6c, 0xb7, 0xab, 0x7f, 0x96, 0x72, 0x94, 0x29, 0xe5, 0x4e, 0x82, 0x68, 0x6b, 0x3c, 0x91, 0x65, 0xe4, 0x97, 0xd9, 0x4, 0xd3, 0x75, 0x4a, 0x61, 0xfc, 0x12, 0x5d, 0xf, 0x15, 0xc3, 0x1b, 0xed, 0x21, 0x4f, 0x4c, 0x5a, 0xfa, 0x13, 0xa2, 0xe5, 0xd7, 0xb9, 0xbb, 0x33, 0x1c, 0xb2, 0x23, 0x86, 0x1b, 0x76, 0x2a, 0xe8, 0xde, 0xe6, 0xc6, 0x70, 0xb1, 0x56, 0xdf, 0x13, 0x6c, 0xbb, 0x8c, 0x52, 0xef, 0x2e, 0x59, 0x87, 0xb4, 0x97, 0x2b, 0x5e, 0x4e, 0xc5, 0x8d, 0x17, 0xdb, 0xb3, 0x19, 0x2f, 0xa4, 0xd9, 0x41, 0x16, 0x5b, 0x3f, 0x7a, 0x28, 0x7a, 0x6b, 0x48, 0xbc, 0xd0, 0x44, 0xcd, 0x36, 0xcd, 0xc5, 0x8f, 0x17, 0x56, 0xe0, 0xd8, 0x2d, 0xc1, 0x37, 0xaf, 0xae, 0xe1, 0x3b, 0x3e, 0x17, 0x29, 0x4f, 0xa0, 0xaf, 0x4c, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
var Example3 = []byte{0x30, 0x80, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x7, 0x2, 0xa0, 0x80, 0x30, 0x80, 0x2, 0x1, 0x1, 0x31, 0xb, 0x30, 0x9, 0x6, 0x5, 0x2b, 0xe, 0x3, 0x2, 0x1a, 0x5, 0x0, 0x30, 0x80, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x7, 0x1, 0xa0, 0x80, 0x24, 0x80, 0x4, 0x82, 0x1, 0xbe, 0x3c, 0x3f, 0x78, 0x6d, 0x6c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3d, 0x22, 0x31, 0x2e, 0x30, 0x22, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x3d, 0x22, 0x55, 0x54, 0x46, 0x2d, 0x38, 0x22, 0x3f, 0x3e, 0xa, 0x3c, 0x21, 0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45, 0x20, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x20, 0x22, 0x2d, 0x2f, 0x2f, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x2f, 0x2f, 0x44, 0x54, 0x44, 0x20, 0x50, 0x4c, 0x49, 0x53, 0x54, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x2f, 0x45, 0x4e, 0x22, 0x20, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x54, 0x44, 0x73, 0x2f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x2d, 0x31, 0x2e, 0x30, 0x2e, 0x64, 0x74, 0x64, 0x22, 0x3e, 0xa, 0x3c, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3d, 0x22, 0x31, 0x2e, 0x30, 0x22, 0x3e, 0xa, 0x3c, 0x64, 0x69, 0x63, 0x74, 0x3e, 0xa, 0x9, 0x3c, 0x6b, 0x65, 0x79, 0x3e, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x3c, 0x2f, 0x6b, 0x65, 0x79, 0x3e, 0xa, 0x9, 0x3c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0x65, 0x6e, 0x3c, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0xa, 0x9, 0x3c, 0x6b, 0x65, 0x79, 0x3e, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x3c, 0x2f, 0x6b, 0x65, 0x79, 0x3e, 0xa, 0x9, 0x3c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0x69, 0x50, 0x61, 0x64, 0x33, 0x2c, 0x34, 0x3c, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0xa, 0x9, 0x3c, 0x6b, 0x65, 0x79, 0x3e, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x3c, 0x2f, 0x6b, 0x65, 0x79, 0x3e, 0xa, 0x9, 0x3c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0x44, 0x4d, 0x50, 0x4b, 0x35, 0x43, 0x42, 0x31, 0x46, 0x31, 0x38, 0x32, 0x3c, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0xa, 0x9, 0x3c, 0x6b, 0x65, 0x79, 0x3e, 0x55, 0x44, 0x49, 0x44, 0x3c, 0x2f, 0x6b, 0x65, 0x79, 0x3e, 0xa, 0x9, 0x3c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0x31, 0x35, 0x39, 0x62, 0x66, 0x65, 0x31, 0x66, 0x61, 0x35, 0x30, 0x61, 0x35, 0x64, 0x63, 0x64, 0x65, 0x31, 0x63, 0x61, 0x66, 0x37, 0x61, 0x38, 0x66, 0x65, 0x35, 0x30, 0x33, 0x36, 0x34, 0x32, 0x37, 0x35, 0x62, 0x36, 0x32, 0x61, 0x36, 0x39, 0x3c, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0xa, 0x9, 0x3c, 0x6b, 0x65, 0x79, 0x3e, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x3c, 0x2f, 0x6b, 0x65, 0x79, 0x3e, 0xa, 0x9, 0x3c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0x31, 0x32, 0x46, 0x36, 0x39, 0x3c, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0xa, 0x3c, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x3e, 0xa, 0x3c, 0x2f, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x3e, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x82, 0xa, 0x5b, 0x30, 0x82, 0x2, 0xf3, 0x30, 0x82, 0x2, 0x5c, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0xa, 0x2, 0xb, 0x9c, 0xba, 0x41, 0x5c, 0x3, 0x86, 0x33, 0x24, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x5, 0x5, 0x0, 0x30, 0x5a, 0x31, 0xb, 0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2, 0x55, 0x53, 0x31, 0x13, 0x30, 0x11, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0xa, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31, 0x15, 0x30, 0x13, 0x6, 0x3, 0x55, 0x4, 0xb, 0x13, 0xc, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x31, 0x1f, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0xd, 0x31, 0x35, 0x30, 0x34, 0x31, 0x35, 0x32, 0x31, 0x31, 0x32, 0x33, 0x38, 0x5a, 0x17, 0xd, 0x31, 0x38, 0x30, 0x34, 0x31, 0x35, 0x32, 0x31, 0x31, 0x32, 0x33, 0x38, 0x5a, 0x30, 0x81, 0x83, 0x31, 0x2d, 0x30, 0x2b, 0x6, 0x3, 0x55, 0x4, 0x3, 0x16, 0x24, 0x39, 0x31, 0x44, 0x35, 0x33, 0x39, 0x41, 0x31, 0x2d, 0x39, 0x42, 0x32, 0x39, 0x2d, 0x34, 0x30, 0x39, 0x45, 0x2d, 0x38, 0x38, 0x41, 0x39, 0x2d, 0x46, 0x41, 0x42, 0x34, 0x44, 0x46, 0x43, 0x39, 0x35, 0x38, 0x31, 0x41, 0x31, 0xb, 0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2, 0x55, 0x53, 0x31, 0xb, 0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x8, 0x13, 0x2, 0x43, 0x41, 0x31, 0x12, 0x30, 0x10, 0x6, 0x3, 0x55, 0x4, 0x7, 0x13, 0x9, 0x43, 0x75, 0x70, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x6f, 0x31, 0x13, 0x30, 0x11, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0xa, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31, 0xf, 0x30, 0xd, 0x6, 0x3, 0x55, 0x4, 0xb, 0x13, 0x6, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x30, 0x81, 0x9f, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x81, 0x8d, 0x0, 0x30, 0x81, 0x89, 0x2, 0x81, 0x81, 0x0, 0xa7, 0xd0, 0x4a, 0xd0, 0x2d, 0xf6, 0xa8, 0x43, 0x6e, 0x96, 0x8f, 0xbc, 0x2c, 0xf7, 0x5, 0x1b, 0x64, 0xcd, 0x86, 0x40, 0x64, 0x68, 0xbe, 0xe3, 0x7, 0x40, 0x2d, 0x9d, 0x8b, 0xa3, 0x18, 0x93, 0x49, 0x40, 0x10, 0xf, 0xb, 0x24, 0xd2, 0x5b, 0x99, 0xfd, 0xcf, 0x1a, 0x3a, 0x30, 0x87, 0x90, 0xb4, 0x86, 0x8c, 0x56, 0xfe, 0xc4, 0x37, 0x8f, 0xf, 0x89, 0x7d, 0xed, 0x3f, 0x80, 0x41, 0x0, 0xda, 0xe2, 0x65, 0xda, 0x6e, 0xc0, 0xd1, 0xdf, 0x2a, 0xaf, 0x40, 0x48, 0x9d, 0x34, 0xab, 0xd7, 0x27, 0xf2, 0xb7, 0xa3, 0x5c, 0x48, 0x70, 0xdc, 0xc3, 0x4e, 0x52, 0x5, 0xc, 0xa2, 0x0, 0x6f, 0x39, 0x1e, 0x19, 0x25, 0x55, 0x97, 0xe5, 0x22, 0xff, 0xa1, 0xa6, 0x34, 0xac, 0xe3, 0x6c, 0x20, 0xc5, 0xd7, 0xcf, 0xb3, 0xca, 0x2d, 0x6e, 0x7e, 0x8d, 0x46, 0x2a, 0xee, 0x80, 0xd6, 0xeb, 0xf, 0x2, 0x3, 0x1, 0x0, 0x1, 0xa3, 0x81, 0x95, 0x30, 0x81, 0x92, 0x30, 0x1f, 0x6, 0x3, 0x55, 0x1d, 0x23, 0x4, 0x18, 0x30, 0x16, 0x80, 0x14, 0xb2, 0xfe, 0x21, 0x23, 0x44, 0x86, 0x95, 0x6a, 0x79, 0xd5, 0x81, 0x26, 0x8e, 0x73, 0x10, 0xd8, 0xa7, 0x4c, 0x8e, 0x74, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16, 0x4, 0x14, 0xbb, 0x7a, 0x8e, 0xfb, 0xa3, 0xfa, 0xc3, 0xe, 0x2e, 0xa3, 0x6b, 0xee, 0x91, 0x8c, 0xec, 0x9f, 0xe9, 0x49, 0xce, 0x3e, 0x30, 0xc, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x2, 0x30, 0x0, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x5, 0xa0, 0x30, 0x20, 0x6, 0x3, 0x55, 0x1d, 0x25, 0x1, 0x1, 0xff, 0x4, 0x16, 0x30, 0x14, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x1, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x2, 0x30, 0x10, 0x6, 0xa, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x63, 0x64, 0x6, 0xa, 0x2, 0x4, 0x2, 0x5, 0x0, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x5, 0x5, 0x0, 0x3, 0x81, 0x81, 0x0, 0xce, 0x9f, 0x1c, 0x73, 0x26, 0x76, 0x7a, 0x6, 0xca, 0xd8, 0x90, 0x8f, 0x8f, 0x5d, 0x54, 0xf2, 0x93, 0xb5, 0xa4, 0x5, 0x58, 0xd1, 0x1b, 0x27, 0x1b, 0xc3, 0x17, 0xe, 0x7d, 0xd1, 0x64, 0x4a, 0x4, 0x43, 0x72, 0x84, 0x85, 0xd1, 0x97, 0xd6, 0x5c, 0x48, 0xb0, 0x9, 0x60, 0x34, 0xc, 0xc3, 0xf4, 0xe4, 0x2b, 0xa5, 0x79, 0x67, 0x9e, 0x47, 0x84, 0x9d, 0x29, 0x19, 0x2a, 0x36, 0x1f, 0x7f, 0x99, 0x7b, 0x2b, 0xfe, 0xb2, 0x1c, 0x5f, 0x23, 0xb4, 0x2a, 0x20, 0xf3, 0xc1, 0x1b, 0xa8, 0xbc, 0xe0, 0xa4, 0x1d, 0xd2, 0x50, 0xe4, 0x2e, 0x85, 0xfe, 0x9f, 0x69, 0x14, 0x3f, 0xed, 0x42, 0x2d, 0x99, 0x76, 0xc3, 0x9, 0xbe, 0x92, 0xd4, 0x27, 0xfd, 0x3d, 0x20, 0x9, 0xa6, 0x58, 0x8a, 0xe9, 0xb1, 0xa4, 0xa2, 0xb4, 0xbe, 0xfa, 0xed, 0xc8, 0x2c, 0x6a, 0xef, 0x57, 0x82, 0x78, 0xd1, 0x15, 0x30, 0x82, 0x3, 0x69, 0x30, 0x82, 0x2, 0x51, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x1, 0x1, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x5, 0x5, 0x0, 0x30, 0x79, 0x31, 0xb, 0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2, 0x55, 0x53, 0x31, 0x13, 0x30, 0x11, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0xa, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31, 0x26, 0x30, 0x24, 0x6, 0x3, 0x55, 0x4, 0xb, 0x13, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x31, 0x2d, 0x30, 0x2b, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0x24, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x30, 0x1e, 0x17, 0xd, 0x30, 0x37, 0x30, 0x34, 0x31, 0x36, 0x32, 0x32, 0x35, 0x34, 0x34, 0x36, 0x5a, 0x17, 0xd, 0x31, 0x34, 0x30, 0x34, 0x31, 0x36, 0x32, 0x32, 0x35, 0x34, 0x34, 0x36, 0x5a, 0x30, 0x5a, 0x31, 0xb, 0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2, 0x55, 0x53, 0x31, 0x13, 0x30, 0x11, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0xa, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31, 0x15, 0x30, 0x13, 0x6, 0x3, 0x55, 0x4, 0xb, 0x13, 0xc, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x31, 0x1f, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x43, 0x41, 0x30, 0x81, 0x9f, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x81, 0x8d, 0x0, 0x30, 0x81, 0x89, 0x2, 0x81, 0x81, 0x0, 0xf1, 0x94, 0x4a, 0xc9, 0xea, 0xba, 0x5a, 0x18, 0x60, 0xad, 0xcb, 0xa2, 0x4d, 0x4d, 0x4e, 0x54, 0x19, 0x69, 0x17, 0x59, 0x7, 0x66, 0xcb, 0x97, 0xe8, 0x66, 0x9a, 0x47, 0x5f, 0x46, 0xae, 0x67, 0x7a, 0xb5, 0x4a, 0x73, 0x54, 0xb1, 0xcb, 0x4, 0xf6, 0xbd, 0x36, 0xb8, 0xc, 0x55, 0x38, 0x8a, 0x84, 0x83, 0x31, 0x52, 0x65, 0xf9, 0x33, 0xe1, 0x97, 0x77, 0x9c, 0x2b, 0x4c, 0x26, 0xb0, 0x25, 0x3f, 0xe9, 0x32, 0xaa, 0x7b, 0x8, 0x74, 0x94, 0xec, 0xc1, 0x4b, 0x38, 0x1d, 0x67, 0x4e, 0x8, 0x52, 0x94, 0x5a, 0x8b, 0x59, 0xa3, 0x5c, 0xd7, 0x93, 0xf4, 0xa0, 0xfe, 0x55, 0x85, 0xbb, 0x4c, 0x46, 0x97, 0x5e, 0x6e, 0xb2, 0x77, 0x45, 0x2f, 0x67, 0x5c, 0xbc, 0xb, 0x18, 0xbf, 0x59, 0xb9, 0x6c, 0x86, 0xf7, 0x2a, 0x75, 0x76, 0xd2, 0x19, 0x71, 0xf4, 0x29, 0x63, 0xb9, 0x25, 0xb, 0xaf, 0x2, 0x3, 0x1, 0x0, 0x1, 0xa3, 0x81, 0x9e, 0x30, 0x81, 0x9b, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x1, 0x86, 0x30, 0xf, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x5, 0x30, 0x3, 0x1, 0x1, 0xff, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16, 0x4, 0x14, 0xb2, 0xfe, 0x21, 0x23, 0x44, 0x86, 0x95, 0x6a, 0x79, 0xd5, 0x81, 0x26, 0x8e, 0x73, 0x10, 0xd8, 0xa7, 0x4c, 0x8e, 0x74, 0x30, 0x1f, 0x6, 0x3, 0x55, 0x1d, 0x23, 0x4, 0x18, 0x30, 0x16, 0x80, 0x14, 0xe7, 0x34, 0x2a, 0x2e, 0x22, 0xde, 0x39, 0x60, 0x6b, 0xb4, 0x94, 0xce, 0x77, 0x83, 0x61, 0x2f, 0x31, 0xa0, 0x7c, 0x35, 0x30, 0x38, 0x6, 0x3, 0x55, 0x1d, 0x1f, 0x4, 0x31, 0x30, 0x2f, 0x30, 0x2d, 0xa0, 0x2b, 0xa0, 0x29, 0x86, 0x27, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x63, 0x61, 0x2f, 0x69, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x63, 0x72, 0x6c, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x5, 0x5, 0x0, 0x3, 0x82, 0x1, 0x1, 0x0, 0x77, 0x5d, 0xcf, 0x67, 0x7a, 0x4c, 0x56, 0x2b, 0xa4, 0x54, 0x77, 0xbd, 0x59, 0x48, 0x3c, 0x1e, 0xe9, 0xbe, 0xd0, 0x8f, 0xf4, 0x90, 0x72, 0xaf, 0x8e, 0x1c, 0x15, 0x77, 0xf2, 0xc, 0xc0, 0x69, 0x57, 0xc9, 0x4e, 0xc3, 0x85, 0x46, 0x16, 0x76, 0x36, 0xb6, 0x5f, 0xfc, 0xea, 0x8f, 0xb5, 0xb6, 0xe0, 0xa, 0xb9, 0xed, 0xd1, 0xa, 0x9b, 0x77, 0xea, 0xab, 0x12, 0xb9, 0x5c, 0x21, 0x55, 0x19, 0x8e, 0x47, 0x23, 0x47, 0x11, 0xb1, 0xd1, 0xd, 0xc9, 0x33, 0xfb, 0x97, 0x14, 0xa2, 0x89, 0x34, 0x58, 0x8f, 0x69, 0xa5, 0x3d, 0xe7, 0x61, 0x78, 0x29, 0xfe, 0x93, 0xa4, 0xf9, 0xcb, 0x45, 0x38, 0x5e, 0xbe, 0x34, 0x15, 0x7c, 0x16, 0x6f, 0x69, 0xd6, 0xa8, 0x21, 0x75, 0x2, 0x2, 0x2e, 0x76, 0x18, 0x2f, 0x55, 0xbc, 0x65, 0xbe, 0xa7, 0x31, 0x52, 0x6f, 0x19, 0xcf, 0xbc, 0x83, 0x78, 0x9d, 0x9, 0x16, 0x8b, 0xd7, 0x42, 0x1c, 0x8e, 0xe5, 0xf2, 0xd4, 0x1d, 0x12, 0xc2, 0x40, 0x5b, 0x2c, 0x1, 0xb7, 0xfc, 0x7, 0x88, 0xbc, 0xad, 0x86, 0x2c, 0x5, 0x48, 0x58, 0x4e, 0xca, 0x55, 0x25, 0xcc, 0x55, 0xa4, 0x82, 0x25, 0xb6, 0x46, 0x29, 0x74, 0x84, 0x52, 0x20, 0x4, 0x40, 0xe3, 0xd1, 0xcd, 0xbc, 0xa2, 0xb8, 0x87, 0x38, 0xf3, 0x31, 0x2f, 0xce, 0x84, 0xa4, 0x29, 0x54, 0xac, 0x3e, 0x38, 0x21, 0x19, 0xc6, 0x9b, 0x42, 0x55, 0xe3, 0x76, 0xa6, 0x36, 0xdd, 0xb7, 0xdb, 0xb3, 0x8b, 0x5e, 0xf9, 0xa1, 0x5a, 0x3f, 0xbb, 0xa0, 0x76, 0x2, 0xb2, 0x80, 0x5b, 0x5e, 0xee, 0xe9, 0x71, 0x7, 0x21, 0xd0, 0xcc, 0x39, 0xee, 0xdc, 0x6f, 0x7d, 0xe9, 0x79, 0x52, 0x3a, 0x4c, 0x3d, 0x79, 0x5b, 0x83, 0x8, 0xa7, 0x24, 0xf, 0x6e, 0x9f, 0x28, 0xae, 0x55, 0xde, 0xfa, 0xd0, 0x3c, 0x24, 0x30, 0x82, 0x3, 0xf3, 0x30, 0x82, 0x2, 0xdb, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x1, 0x17, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x5, 0x5, 0x0, 0x30, 0x62, 0x31, 0xb, 0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2, 0x55, 0x53, 0x31, 0x13, 0x30, 0x11, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0xa, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31, 0x26, 0x30, 0x24, 0x6, 0x3, 0x55, 0x4, 0xb, 0x13, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x31, 0x16, 0x30, 0x14, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0xd, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0xd, 0x30, 0x37, 0x30, 0x34, 0x31, 0x32, 0x31, 0x37, 0x34, 0x33, 0x32, 0x38, 0x5a, 0x17, 0xd, 0x32, 0x32, 0x30, 0x34, 0x31, 0x32, 0x31, 0x37, 0x34, 0x33, 0x32, 0x38, 0x5a, 0x30, 0x79, 0x31, 0xb, 0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2, 0x55, 0x53, 0x31, 0x13, 0x30, 0x11, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0xa, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31, 0x26, 0x30, 0x24, 0x6, 0x3, 0x55, 0x4, 0xb, 0x13, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x31, 0x2d, 0x30, 0x2b, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0x24, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x30, 0x82, 0x1, 0x22, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x82, 0x1, 0xf, 0x0, 0x30, 0x82, 0x1, 0xa, 0x2, 0x82, 0x1, 0x1, 0x0, 0xa3, 0x1e, 0xbe, 0xf0, 0x47, 0xc0, 0xb4, 0x9e, 0x10, 0x5b, 0x46, 0xa4, 0xb8, 0x21, 0xb8, 0x4f, 0x86, 0x21, 0x70, 0x28, 0x45, 0x60, 0x5c, 0x1c, 0xc3, 0xc8, 0xa, 0x64, 0x63, 0x88, 0xfb, 0xfc, 0x69, 0xee, 0xf8, 0x54, 0xfc, 0xe9, 0x5b, 0xb7, 0x6, 0x4e, 0x4, 0x2f, 0xc3, 0x6b, 0x33, 0xaf, 0x44, 0x4c, 0xea, 0x4b, 0x80, 0x9, 0xb4, 0x87, 0xf6, 0x5b, 0xb4, 0xfd, 0x64, 0xdd, 0xb3, 0x72, 0xe0, 0x13, 0xb3, 0xfd, 0x17, 0xd9, 0xbc, 0xe7, 0xa8, 0xed, 0xc2, 0x8c, 0x61, 0xc2, 0x2a, 0xf9, 0xec, 0xce, 0xa5, 0x5e, 0xd6, 0x69, 0xeb, 0x64, 0xb, 0x8d, 0x8, 0x8f, 0xb8, 0xa0, 0x50, 0x46, 0x9, 0xdc, 0x19, 0xe4, 0xe5, 0xb0, 0x94, 0x6d, 0xbb, 0xf7, 0x99, 0x98, 0xc4, 0xe8, 0x9b, 0x41, 0x4e, 0xd4, 0xf1, 0x65, 0xe3, 0x1b, 0x52, 0x7a, 0xdc, 0xe8, 0x3, 0xd9, 0x6e, 0x1d, 0xda, 0x10, 0x55, 0x86, 0xa4, 0x29, 0x58, 0x49, 0xc, 0xea, 0x47, 0xd7, 0x15, 0x34, 0x33, 0xf6, 0xc0, 0xa0, 0x44, 0x4a, 0x70, 0xbe, 0x2c, 0xb5, 0x2a, 0x30, 0x37, 0x8c, 0x2e, 0x15, 0xeb, 0xd1, 0xe4, 0x6c, 0x97, 0x38, 0x55, 0x56, 0xb1, 0x35, 0x2b, 0x58, 0xea, 0x44, 0xa3, 0x26, 0x85, 0xee, 0xc8, 0x66, 0x4a, 0xe4, 0xcf, 0x89, 0xf0, 0x3d, 0x63, 0xad, 0x29, 0xde, 0xad, 0xba, 0x5a, 0xb3, 0xdc, 0xa5, 0xa3, 0x9a, 0xa7, 0x9, 0x4e, 0x80, 0x16, 0x35, 0x65, 0xa4, 0x85, 0xd, 0x63, 0x7b, 0x3e, 0x63, 0x8a, 0xda, 0x7d, 0x4a, 0x46, 0xec, 0xa3, 0x39, 0x18, 0x34, 0xb9, 0xc6, 0x28, 0x65, 0x18, 0xbc, 0x13, 0x60, 0x9c, 0x7f, 0x57, 0xac, 0x14, 0xc9, 0x89, 0xed, 0xa1, 0xb6, 0x87, 0x68, 0x52, 0xb6, 0x84, 0x4e, 0xb8, 0xc8, 0x83, 0xec, 0xf9, 0x9e, 0x19, 0xab, 0xb3, 0xc1, 0xb, 0x86, 0xc7, 0x9f, 0x2, 0x3, 0x1, 0x0, 0x1, 0xa3, 0x81, 0x9c, 0x30, 0x81, 0x99, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x1, 0x86, 0x30, 0xf, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x5, 0x30, 0x3, 0x1, 0x1, 0xff, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16, 0x4, 0x14, 0xe7, 0x34, 0x2a, 0x2e, 0x22, 0xde, 0x39, 0x60, 0x6b, 0xb4, 0x94, 0xce, 0x77, 0x83, 0x61, 0x2f, 0x31, 0xa0, 0x7c, 0x35, 0x30, 0x1f, 0x6, 0x3, 0x55, 0x1d, 0x23, 0x4, 0x18, 0x30, 0x16, 0x80, 0x14, 0x2b, 0xd0, 0x69, 0x47, 0x94, 0x76, 0x9, 0xfe, 0xf4, 0x6b, 0x8d, 0x2e, 0x40, 0xa6, 0xf7, 0x47, 0x4d, 0x7f, 0x8, 0x5e, 0x30, 0x36, 0x6, 0x3, 0x55, 0x1d, 0x1f, 0x4, 0x2f, 0x30, 0x2d, 0x30, 0x2b, 0xa0, 0x29, 0xa0, 0x27, 0x86, 0x25, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x63, 0x61, 0x2f, 0x72, 0x6f, 0x6f, 0x74, 0x2e, 0x63, 0x72, 0x6c, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x5, 0x5, 0x0, 0x3, 0x82, 0x1, 0x1, 0x0, 0x1d, 0xd1, 0xd5, 0x7b, 0xdd, 0x74, 0x4e, 0xd7, 0x17, 0xfc, 0x82, 0x2d, 0xc, 0x99, 0x9b, 0x5e, 0x42, 0x72, 0xf2, 0x69, 0xdc, 0xd5, 0x6b, 0x5e, 0xd, 0xc, 0x6b, 0x4b, 0x3e, 0x7b, 0x14, 0x25, 0xde, 0xb3, 0x94, 0xe8, 0xa0, 0xfa, 0xf, 0x80, 0x89, 0xf2, 0x17, 0x3d, 0x0, 0x2, 0xa2, 0x91, 0x91, 0xbe, 0x74, 0x57, 0xdc, 0xaf, 0x9a, 0x9f, 0xa1, 0xa, 0x7d, 0x30, 0xbe, 0x0, 0x2a, 0xcc, 0x21, 0x59, 0xeb, 0xfd, 0x49, 0xac, 0x6e, 0x75, 0x19, 0xe8, 0x9a, 0x7a, 0x3, 0xd1, 0x86, 0xf6, 0xe7, 0xf6, 0xb0, 0xe, 0x4b, 0x49, 0xfa, 0xa3, 0xb7, 0x41, 0xba, 0xd7, 0xd1, 0xe3, 0x56, 0xa1, 0x7d, 0x83, 0xab, 0x97, 0xae, 0xf8, 0x51, 0x4a, 0x26, 0xc1, 0x85, 0x42, 0x13, 0x26, 0x8d, 0x3, 0x54, 0x66, 0x10, 0x5e, 0x60, 0x84, 0x5, 0x12, 0x31, 0x2b, 0x6b, 0x54, 0xc0, 0xa0, 0xc8, 0x41, 0xbc, 0x54, 0x1e, 0xe7, 0x54, 0xad, 0x13, 0x0, 0xd2, 0x4a, 0xc7, 0xbb, 0xc1, 0x8a, 0xaf, 0x81, 0x8, 0x8e, 0xf0, 0x46, 0xa, 0xbf, 0x27, 0xa6, 0xbe, 0xdc, 0xcf, 0x39, 0x3a, 0x80, 0x70, 0x19, 0x23, 0x32, 0xa3, 0x6b, 0x66, 0x5d, 0x9e, 0x4d, 0xa8, 0x47, 0x49, 0xb2, 0x7b, 0x45, 0xb5, 0x51, 0x33, 0xa7, 0x74, 0x67, 0x9, 0x4e, 0xb6, 0x6c, 0x6f, 0x48, 0xf7, 0x2c, 0xb9, 0x33, 0x5, 0x44, 0x6b, 0x45, 0xbe, 0x74, 0x4b, 0x6f, 0xb2, 0x86, 0x91, 0xb4, 0x3e, 0x25, 0x28, 0x25, 0x9e, 0xb3, 0xc2, 0x51, 0x86, 0xfc, 0x4f, 0xe5, 0xaf, 0x3b, 0xaa, 0xbb, 0x44, 0x2c, 0x1, 0x49, 0xe2, 0x74, 0xb3, 0x34, 0xfa, 0x44, 0xef, 0x14, 0xc2, 0x11, 0xf2, 0x2d, 0x19, 0x1a, 0x51, 0x89, 0xd3, 0x8, 0x4a, 0x41, 0x6c, 0x58, 0x56, 0xde, 0x9b, 0x3a, 0xe1, 0x5, 0x57, 0xe5, 0x62, 0xcf, 0xd2, 0xf, 0x31, 0x82, 0x1, 0x6d, 0x30, 0x82, 0x1, 0x69, 0x2, 0x1, 0x1, 0x30, 0x68, 0x30, 0x5a, 0x31, 0xb, 0x30, 0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2, 0x55, 0x53, 0x31, 0x13, 0x30, 0x11, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0xa, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31, 0x15, 0x30, 0x13, 0x6, 0x3, 0x55, 0x4, 0xb, 0x13, 0xc, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x31, 0x1f, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x4, 0x3, 0x13, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x20, 0x69, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x20, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x43, 0x41, 0x2, 0xa, 0x2, 0xb, 0x9c, 0xba, 0x41, 0x5c, 0x3, 0x86, 0x33, 0x24, 0x30, 0x9, 0x6, 0x5, 0x2b, 0xe, 0x3, 0x2, 0x1a, 0x5, 0x0, 0xa0, 0x5d, 0x30, 0x18, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x9, 0x3, 0x31, 0xb, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x7, 0x1, 0x30, 0x1c, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x9, 0x5, 0x31, 0xf, 0x17, 0xd, 0x31, 0x35, 0x30, 0x34, 0x31, 0x36, 0x31, 0x35, 0x33, 0x37, 0x33, 0x30, 0x5a, 0x30, 0x23, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x9, 0x4, 0x31, 0x16, 0x4, 0x14, 0xa2, 0x9d, 0x46, 0x28, 0xc1, 0x8e, 0xdf, 0x73, 0x32, 0x2b, 0x6b, 0x31, 0xe1, 0xec, 0x95, 0xd3, 0x50, 0x39, 0xde, 0x1e, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x4, 0x81, 0x80, 0xa5, 0xe9, 0xa2, 0x28, 0xcc, 0xdb, 0x40, 0xa0, 0x7f, 0x73, 0x47, 0x69, 0x35, 0xb3, 0xb6, 0x4b, 0xae, 0x6d, 0xad, 0x72, 0x59, 0xdc, 0x9c, 0x32, 0x5a, 0x45, 0x69, 0xcb, 0x87, 0xd4, 0xe2, 0xda, 0xe, 0xca, 0x9, 0x9c, 0xdb, 0xcb, 0xaa, 0x16, 0xcf, 0x9, 0xc7, 0x89, 0x76, 0x72, 0x20, 0x80, 0xfe, 0x13, 0x81, 0x51, 0xd0, 0x12, 0xcb, 0xe3, 0xee, 0x66, 0xa3, 0xf7, 0xbf, 0x84, 0xa8, 0xd, 0x25, 0x44, 0x45, 0x92, 0xb4, 0xfc, 0x39, 0x90, 0xe1, 0x6d, 0x8f, 0xd, 0xe, 0x7f, 0x74, 0x23, 0x4e, 0xb3, 0x22, 0x63, 0x9e, 0x5b, 0x27, 0xb5, 0x2d, 0xbe, 0xd0, 0x61, 0x65, 0x34, 0xc, 0x9c, 0xb2, 0x6, 0xba, 0x40, 0x42, 0x67, 0x55, 0x4c, 0x5d, 0x5, 0xe7, 0xe9, 0xbd, 0x46, 0x30, 0x34, 0x2f, 0xb8, 0x6c, 0x7d, 0xa6, 0xd5, 0x72, 0x84, 0x1c, 0x3e, 0xdb, 0x3f, 0x6c, 0x3e, 0xda, 0xe2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
